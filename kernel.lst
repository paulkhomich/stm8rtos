ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 1.
Hexadecimal [24-Bits]



                                      1 .include "define.s"
                                      1 ;-------------------------------
                                      2 ; Kernel: Macros && Constants 
                                      3 ;-------------------------------
                           0007FF     4 .gblequ RAMEND,			#0x07FF
                                      5 
                           000020     6 .gblequ QUEUE_CAPACITY,		#0x0020
                           000020     7 .gblequ PTIMERS_CAPACITY,	#0x0020
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 2.
Hexadecimal [24-Bits]



                                      2 
                                      3 		.area DATA
                                      4 		.area SSEG
                                      5 		.area HOME
                                      6 			.area VECTORS
                                      7 			.area TASKSTABLE
                                      8 			.area CONSTANTS
                                      9 		.area CODE
                                     10 			.area KERNEL
                                     11 				.area INIT
                                     12 				.area PROCEDURES
                                     13 				.area MAIN
                                     14 			.area TASKS
                                     15 
                                     16 .area DATA
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 3.
Hexadecimal [24-Bits]



                                     17 .include "memory.s"
                                      1 ;-----------------------
                                      2 ; Tasks Queue
                                      3 ;-----------------------
      000000                          4 QueueSize:
      000000                          5 .ds	0x1
      000001                          6 QueuePtr:
      000001                          7 .ds	0x1
      000002                          8 QueueOverflow:
      000002                          9 .ds	0x1
      000003                         10 Queue:
      000003                         11 .ds	QUEUE_CAPACITY
                                     12 
                                     13 ;-----------------------
                                     14 ; Timers Queue
                                     15 ;-----------------------
      000023                         16 PTimersSize:
      000023                         17 .ds	0x1
      000024                         18 PTimersOverflow:
      000024                         19 .ds	0x1
      000025                         20 PTimers:
      000025                         21 .blk3	PTIMERS_CAPACITY
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 4.
Hexadecimal [24-Bits]



                                     18 
                                     19 .area HOME
                                     20 .area VECTORS
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 5.
Hexadecimal [24-Bits]



                                     21 .include "vectors.s"
      000000 82 00 00 00              1 INT Init
      000004 82 00 00 00              2 INT Init
      000008 82 00 00 00              3 INT Init
      00000C 82 00 00 00              4 INT Init
      000010 82 00 00 00              5 INT Init
      000014 82 00 00 00              6 INT Init
      000018 82 00 00 00              7 INT Init
      00001C 82 00 00 00              8 INT Init
      000020 82 00 00 00              9 INT Init
      000024 82 00 00 00             10 INT Init
      000028 82 00 00 00             11 INT Init
      00002C 82 00 00 00             12 INT Init
      000030 82 00 00 00             13 INT Init
      000034 82 00 00 00             14 INT Init
      000038 82 00 00 00             15 INT Init
      00003C 82 00 00 00             16 INT Init
      000040 82 00 00 00             17 INT Init
      000044 82 00 00 00             18 INT Init
      000048 82 00 00 00             19 INT Init
      00004C 82 00 00 00             20 INT Init
      000050 82 00 00 00             21 INT Init
      000054 82 00 00 00             22 INT Init
      000058 82 00 00 00             23 INT Init
      00005C 82 00 00 00             24 INT Init
      000060 82 00 00 00             25 INT Init
      000064 82 00 00 00             26 INT Init
      000068 82 00 00 00             27 INT Init
      00006C 82 00 00 00             28 INT Init
      000070 82 00 00 00             29 INT Init
      000074 82 00 00 00             30 INT Init
      000078 82 00 00 00             31 INT Init
      00007C 82 00 00 00             32 INT Init
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 6.
Hexadecimal [24-Bits]



                                     22 .area TASKSTABLE
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 7.
Hexadecimal [24-Bits]



                                     23 .include "table.s"
                                      1 ;---------------------------------------
                                      2 ; Tasks Transition Table
                                      3 ; Task Num. to Task Addr
                                      4 ; MAXIMUM TASKS:  128
                                      5 ;---------------------------------------
      000000                          6 TasksTable:
      000000 00 00                    7 	.dw Idle
      000002 00 00                    8 	.dw Idle
      000004 00 00                    9 	.dw Idle
      000006 00 00                   10 	.dw Idle
      000008 00 00                   11 	.dw Idle
      00000A 00 00                   12 	.dw Idle
      00000C 00 00                   13 	.dw Idle
      00000E 00 00                   14 	.dw Idle
      000010 00 00                   15 	.dw Idle
      000012 00 00                   16 	.dw Idle
      000014 00 00                   17 	.dw Idle
      000016 00 00                   18 	.dw Idle
      000018 00 00                   19 	.dw Idle
      00001A 00 00                   20 	.dw Idle
      00001C 00 00                   21 	.dw Idle
      00001E 00 00                   22 	.dw Idle
      000020 00 00                   23 	.dw Idle
      000022 00 00                   24 	.dw Idle
      000024 00 00                   25 	.dw Idle
      000026 00 00                   26 	.dw Idle
      000028 00 00                   27 	.dw Idle
      00002A 00 00                   28 	.dw Idle
      00002C 00 00                   29 	.dw Idle
      00002E 00 00                   30 	.dw Idle
      000030 00 00                   31 	.dw Idle
      000032 00 00                   32 	.dw Idle
      000034 00 00                   33 	.dw Idle
      000036 00 00                   34 	.dw Idle
      000038 00 00                   35 	.dw Idle
      00003A 00 00                   36 	.dw Idle
      00003C 00 00                   37 	.dw Idle
      00003E 00 00                   38 	.dw Idle
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 8.
Hexadecimal [24-Bits]



                                     24 
                                     25 .area CODE
                                     26 .area KERNEL
                                     27 .area INIT
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 9.
Hexadecimal [24-Bits]



                                     28 .include "init.s"
      000000                          1 Init::
      000000 35 00 00 00      [ 1]    2 	MOV QueueSize,		#0x0
      000004 35 00 00 01      [ 1]    3 	MOV QueuePtr,		#0x0
      000008 35 00 00 02      [ 1]    4 	MOV QueueOverflow,	#0x0
                                      5 
      00000C 35 00 00 23      [ 1]    6 	MOV PTimersSize,	#0x0
      000010 35 00 00 24      [ 1]    7 	MOV PTimersOverflow,	#0x0
                                      8 	;Stack init
      000014 AE 07 FF         [ 2]    9 	LDW X, #RAMEND
      000017 94               [ 1]   10 	LDW SP, X	
                                     11 
      000018 A6 FF            [ 1]   12 	LD A, #0xFF
                                     13 	;Queue init all items with 0xFF
      00001A AE 00 03         [ 2]   14 	LDW X, #Queue
      00001D 90 AE 00 20      [ 2]   15 	LDW Y, #QUEUE_CAPACITY 
      000021                         16 QueueInitLoop:
      000021 90 5D            [ 2]   17 	TNZW Y
      000023 27 06            [ 1]   18 	JREQ QueueInitEnd
      000025 F7               [ 1]   19 	LD (X), A
      000026 5C               [ 1]   20 	INCW X
      000027 90 5A            [ 2]   21 	DECW Y
      000029 20 F6            [ 2]   22 	JRA QueueInitLoop
      00002B                         23 QueueInitEnd:
                                     24 	 
                                     25 	;PTimers init all items with {0xFF,0xFF,0xFF}
      00002B AE 00 25         [ 2]   26 	LDW X, #PTimers
      00002E 90 AE 00 20      [ 2]   27 	LDW Y, #PTIMERS_CAPACITY
      000032                         28 PTimersInitLoop:
      000032 90 5D            [ 2]   29 	TNZW Y
      000034 27 09            [ 1]   30 	JREQ PTimersInitEnd
      000036 F7               [ 1]   31 	LD (X), A
      000037 5C               [ 1]   32 	INCW X
      000038 F7               [ 1]   33 	LD (X), A
      000039 5C               [ 1]   34 	INCW X
      00003A F7               [ 1]   35 	LD (X), A
      00003B 90 5A            [ 2]   36 	DECW Y
      00003D 20 F3            [ 2]   37 	JRA PTimersInitLoop
      00003F                         38 PTimersInitEnd:
      00003F 20 00            [ 2]   39 	JRA Main	
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 10.
Hexadecimal [24-Bits]



                                     29 .area PROCEDURES
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 11.
Hexadecimal [24-Bits]



                                     30 .include "queue.s"
                                      1 ;---------------------------------------
                                      2 ; Add Task to Queue
                                      3 ; A <- Task Num.
                                      4 ;---------------------------------------
      000000                          5 AddTask::
                                      6 	;Save A(num) & X register
      000000 89               [ 2]    7 	PUSHW X
      000001 88               [ 1]    8 	PUSH A
                                      9 	;Check Queue size (enough space?)
      000002 C6 00 00         [ 1]   10 	LD A, QueueSize
      000005 A0 20            [ 1]   11 	SUB A, #QUEUE_CAPACITY
      000007 2B 07            [ 1]   12 	JRMI QueueHaveSpace
      000009                         13 QueueFull:
      000009 35 FF 00 02      [ 1]   14 	MOV QueueOverflow, #0xFF
      00000D 84               [ 1]   15 	POP A
      00000E 85               [ 2]   16 	POPW X
      00000F 81               [ 4]   17 	RET	
      000010                         18 QueueHaveSpace:
      000010 5F               [ 1]   19 	CLRW X
      000011 72 BB 00 01      [ 2]   20 	ADDW X, QueuePtr
      000015 72 BB 00 00      [ 2]   21 	ADDW X, QueueSize
      000019 1D 00 20         [ 2]   22 	SUBW X, #QUEUE_CAPACITY
      00001C 2A 03            [ 1]   23 	JRPL QueueCircle
      00001E                         24 QueueLinear:
      00001E 1C 00 20         [ 2]   25 	ADDW X, #QUEUE_CAPACITY
      000021                         26 QueueCircle:
                                     27 	;Now place on (X) new value
      000021 84               [ 1]   28 	POP A
      000022 F7               [ 1]   29 	LD (X), A
      000023 72 5C 00 00      [ 1]   30 	INC QueueSize
                                     31 	;Restore X
      000027 85               [ 2]   32 	POPW X
                                     33 
      000028 81               [ 4]   34 	RET
                                     35 
                                     36 ;---------------------------------------
                                     37 ; Remove From Queue
                                     38 ;---------------------------------------
      000029                         39 RemoveTask::
                                     40 	;Save A
      000029 88               [ 1]   41 	PUSH A
                                     42 	;Ptr >>> 1
      00002A C6 00 01         [ 1]   43 	LD A, QueuePtr
      00002D 4C               [ 1]   44 	INC A
      00002E A0 20            [ 1]   45 	SUB A, #QUEUE_CAPACITY
      000030 27 02            [ 1]   46 	JREQ RemoveTaskCircle
      000032                         47 RemoveTaskLinear:
      000032 AB 20            [ 1]   48 	ADD A, #QUEUE_CAPACITY
      000034                         49 RemoveTaskCircle:
                                     50 	;Now save new Ptr
      000034 C7 00 01         [ 1]   51 	LD QueuePtr, A
      000037 72 5A 00 00      [ 1]   52 	DEC QueueSize
                                     53 	;Restore A
      00003B 84               [ 1]   54 	POP A
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 12.
Hexadecimal [24-Bits]



                                     55 
      00003C 81               [ 4]   56 	RET
                                     57 	
                                     58 ;---------------------------------------
                                     59 ; Run Task
                                     60 ; A <- Task Num.
                                     61 ;---------------------------------------
      00003D                         62 RunTask::
                                     63 	;Save A & Y
      00003D 88               [ 1]   64 	PUSH A
      00003E 90 89            [ 2]   65 	PUSHW Y
                                     66 	;Find Task addr. by num. 
                                     67 	;x2 (2-bit addr.)
      000040 48               [ 1]   68 	SLL A
      000041 90 5F            [ 1]   69 	CLRW Y
      000043 90 97            [ 1]   70 	LD YL, A
                                     71 	;Load H
      000045 90 D6 00 00      [ 1]   72 	LD A, (#TasksTable, Y)
      000049 95               [ 1]   73 	LD XH, A
                                     74 	;Load L
      00004A 90 5C            [ 1]   75 	INCW Y
      00004C 90 D6 00 00      [ 1]   76 	LD A, (#TasksTable, Y)
      000050 97               [ 1]   77 	LD XL, A
                                     78 	;Now in X - task addr.
                                     79 	;Restore A & Y
      000051 90 85            [ 2]   80 	POPW Y
      000053 84               [ 1]   81 	POP A
                                     82 	;Go to task
      000054 FC               [ 2]   83 	JP (X)		
                                     84 
                                     85 
                                     86 
                                     87 
                                     88 
                                     89 
                                     90 
                                     91 
                                     92 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 13.
Hexadecimal [24-Bits]



                                     31 .area MAIN
      000000                         32 Main:
      000000 9D               [ 1]   33 	NOP
      000001 9D               [ 1]   34 	NOP
a     000002                         35 	JP #Main
                                     36 
                                     37 .area TASKS
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 14.
Hexadecimal [24-Bits]



                                     38 .include "tasks.s"
      000000                          1 Idle::
      000000 9D               [ 1]    2 	NOP
      000001 9D               [ 1]    3 	NOP
      000002 81               [ 4]    4 	RET
                                      5 
